using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.Practices.EnterpriseLibrary.Data;
using Newtonsoft.Json.Linq;
using System.Data;
using System.Data.Common;
using System.Web;

namespace CrisMAcAPI.Areas.FAM.Models
{
    public class AssetDocUploadModel : CrisMAc.Models.CommonProperties
    {
        DatabaseProviderFactory factory = new DatabaseProviderFactory();
        public int AssetEntityID { get; set; }
        //public int EntityKey { get; set; }
        //public int AssetDocumentAlt_key { get; set; }
        //public int AssetDocumentUploadEventAlt_key { get; set; }
        //public int AssetDocumentNatureAlt_key { get; set; }
        //public int AssetDocumentTypeAlt_key { get; set; }
        //public string AssetDocumentTitle { get; set; }
        //public string AssetDocumentDesc { get; set; }
        //public string AssetDocumentDate { get; set; }

        //public string AssetDocumentUploadDate { get; set; }
        //public string AssetDocumentExtension { get; set; }
        //public string AssetDocumentLocation { get; set; }

        //public string ChangeFields { get; set; }

        public DataSet AssetDocDetailSelect()
        {
            Database database = factory.Create("ConnStringDecr");
            DbCommand command = database.GetStoredProcCommand("AssetDocumentDetailSelect");
            DataSet ds = new DataSet();
            try
            {
                using (command)
                {
                    database.AddInParameter(command, "@AssetEntityID", System.Data.DbType.Int32, AssetEntityID);
                    database.AddInParameter(command, "@TimeKey", System.Data.DbType.Int32, _TimeKey);
                    database.AddInParameter(command, "@Mode", System.Data.DbType.Int32, _OperationFlag);
                    ds = database.ExecuteDataSet(command);
                }
                return ds;
            }
            catch (Exception ex)
            {
                return null;
            }
        }

        public DataSet AssetDocDetailParameterisedMasterData()
        {
            Database database = factory.Create("ConnStringDecr");
            DbCommand command = database.GetStoredProcCommand("AssetDocumentDetailParameterisedMasterData");
            DataSet ds = new DataSet();
            try
            {
                using (command)
                {
                    database.AddInParameter(command, "TimeKey", System.Data.DbType.Int32, _TimeKey);
                    ds = database.ExecuteDataSet(command);
                }
                return ds;
            }
            catch (Exception ex)
            {
                return null;
            }
        }
    }
}
