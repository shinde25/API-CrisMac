using CrisMAc.Models.Utility;
using CrisMAcAPI.Areas.FAM.Models.Repository.AssetTransactionMainRepository;
using Newtonsoft.Json.Linq;
using System;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using System.Web.Script.Serialization;

namespace CrisMAcAPI.Areas.FAM.Controllers
{
    public class AssetTransactionMainController : ApiController
    {
        IAssetTransactionMainRepository repository;
        JavaScriptSerializer _JavaScriptSerializer = new JavaScriptSerializer() { MaxJsonLength = int.MaxValue, RecursionLimit = 100 };
        UtilityWeb objutility = new UtilityWeb();
        public AssetTransactionMainController(IAssetTransactionMainRepository repository)
        {
            this.repository = repository;
        }

        //      parmatrised    **************************** //
        [Route("CrisMAc/GetMetaAssetTransactionMain/{param}")]
        [HttpGet]
        public string GetMetaAssetTransactionMain(string param)
        {
            param = objutility.DecryptString(param);
            var objAuxDetail = repository.GetMetaData(param); 
            var json = _JavaScriptSerializer.Serialize(objAuxDetail);
            return objutility.EnryptString(json);
        }

        //      FETCH   ************************    //
        [Route("CrisMAc/FetchAssetTransactionMain/{param}")]
        [HttpGet]
        public string FetchAssetTransactionMain(string param)
        {
            param = objutility.DecryptString(param);
            var objAuxDetail = repository.FetchData(param);  
            var json = _JavaScriptSerializer.Serialize(objAuxDetail);
            return objutility.EnryptString(json);
        }
    }
}
