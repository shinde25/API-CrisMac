using Microsoft.Practices.EnterpriseLibrary.Data;
using Newtonsoft.Json.Linq;
using System;
using System.Data;
using System.Data.Common;

namespace CrisMAcAPI.Areas.LOS.Models
{
    public class CustomerModel
    {
        DatabaseProviderFactory factory = new DatabaseProviderFactory();
        public string MasterName { get; set; }
        public string SearchString { get; set; }

        public string LiveLocation { get; set; }
        public string Gender { get; set; }
        public string LoanAmount { get; set; }
        public string AplicantEMI { get; set; }
        public string LoanType { get; set; }
        public string EmploymentType { get; set; }
        public string CompanyName { get; set; }
        public string JoiningDate { get; set; }
        public string WorkExperience { get; set; }
        public string GrossSalary { get; set; }
        public string AnnualBonus { get; set; }
        public string MonthlyIncentives { get; set; }
        public string YearOfEstablishment { get; set; }
        public string ProfitExcludingTax { get; set; }
        public string DateofBirth { get; set; }
        public string CoApplicant { get; set; }
        public string Relation { get; set; }
        public string OwnershipDivided { get; set; }
        public string CoApplicantCity { get; set; }
        public string CoApplicantEmploymentType { get; set; }
        public string CoApplicantCompanyName { get; set; }
        public string CoApplicantJoiningDate { get; set; }
        public string CoApplicantWorkExperience { get; set; }
        public string CoApplicantGrossSalary { get; set; }
        public string CoApplicantAnnualBonus { get; set; }
        public string CoApplicantMonthlyIncentives { get; set; }
        public string CoapplicantYearOfEstablishment { get; set; }
        public string CoapplicantPofitExcludingTax { get; set; }
        public string CoApplicantEMI { get; set; }
        public string CoApplicantDateofBirth { get; set; }
        public string Retiredfrom { get; set; }
        public string YearofRetirement { get; set; }
        public string DesignationAtRetirement { get; set; }
        public string Pension { get; set; }
        public string PensionAmount { get; set; }
        public string NonPensionSourceOfLivelihood { get; set; }
        public string NonPensionIncome { get; set; }
        public string Homemaker { get; set; }
        public string Name { get; set; }
        public string MobileNo { get; set; }
        public string EmailID { get; set; }
        public string CreatedDate { get; set; }
        public string Source { get; set; }


        public string PropertyLocation { get; set; }
        public string UseOfLoan { get; set; }
        public string CostOfProperty { get; set; }
        public string PropertyDetails { get; set; }
        public string BuilderorProjectName { get; set; }
        public string CostofHomeFlat { get; set; }
        public string LandLocation { get; set; }
        public string TypeOfLand { get; set; }
        public string Seller { get; set; }
        public string CostofLand { get; set; }
        public string CostofConstruction { get; set; }


        public string VehicleType { get; set; }
        public string TwoWheelerType { get; set; }
        public string VehicleMakeAndModel { get; set; }
        public string TypeOfCar { get; set; }
        public string PreferredCarForNewCar { get; set; }
        public string PreferredCarForUsedCar { get; set; }
        public string MonthYearOfManufacture { get; set; }

        public string WeightofGold { get; set; }
        public string CaratofGold { get; set; }

        public string LocationtoStudy { get; set; }
        public string EducationalCourse { get; set; }
        public string UnderGraduationOption { get; set; }
        public string PercentageUnderGraduation { get; set; }
        public string UniversityNamePostGraduation { get; set; }
        public string DegreePostGraduation { get; set; }
        public string PercentagePostGraduation { get; set; }

        public string ArticleToPurchase { get; set; }
        public int Result { get; set; }

        public DataSet GetMasterData()
        {
            Database database = factory.Create("ConnStringDecr");
            DbCommand command = database.GetStoredProcCommand("GetMasterData");
            DataSet ds = new DataSet();
            try
            {
                using (command)
                {
                    database.AddInParameter(command, "MasterName", System.Data.DbType.String, MasterName);
                    database.AddInParameter(command, "SearchString", System.Data.DbType.String, SearchString);
                    ds = database.ExecuteDataSet(command);
                }
                return ds;
            }
            catch (Exception ex)
            {
                return ds;
            }
        }



        public JObject InsertQECApplication()
        {
            Database database = factory.Create("ConnStringDecr");
            DbCommand command = database.GetStoredProcCommand("QECApplicationInsert");
            try
            {
                using (command)
                {

                    database.AddInParameter(command, "LiveLocation", System.Data.DbType.String, LiveLocation);
                    database.AddInParameter(command, "Gender", System.Data.DbType.String, Gender);
                    database.AddInParameter(command, "LoanAmount", System.Data.DbType.String, LoanAmount);
                    database.AddInParameter(command, "AplicantEMI", System.Data.DbType.String, AplicantEMI);
                    database.AddInParameter(command, "LoanType", System.Data.DbType.String, LoanType);
                    database.AddInParameter(command, "EmploymentType", System.Data.DbType.String, EmploymentType);
                    database.AddInParameter(command, "CompanyName", System.Data.DbType.String, CompanyName);
                    database.AddInParameter(command, "JoiningDate", System.Data.DbType.String, JoiningDate);
                    database.AddInParameter(command, "WorkExperience", System.Data.DbType.String, WorkExperience);
                    database.AddInParameter(command, "GrossSalary", System.Data.DbType.String, GrossSalary);
                    database.AddInParameter(command, "AnnualBonus", System.Data.DbType.String, AnnualBonus);
                    database.AddInParameter(command, "MonthlyIncentives", System.Data.DbType.String, MonthlyIncentives);
                    database.AddInParameter(command, "YearOfEstablishment", System.Data.DbType.String, YearOfEstablishment);
                    database.AddInParameter(command, "ProfitExcludingTax", System.Data.DbType.String, ProfitExcludingTax);
                    database.AddInParameter(command, "DateofBirth", System.Data.DbType.String, DateofBirth);
                    database.AddInParameter(command, "CoApplicant", System.Data.DbType.String, CoApplicant);
                    database.AddInParameter(command, "Relation", System.Data.DbType.String, Relation);
                    database.AddInParameter(command, "OwnershipDivided", System.Data.DbType.String, OwnershipDivided);
                    database.AddInParameter(command, "CoApplicantCity", System.Data.DbType.String, CoApplicantCity);
                    database.AddInParameter(command, "CoApplicantEmploymentType", System.Data.DbType.String, CoApplicantEmploymentType);
                    database.AddInParameter(command, "CoApplicantCompanyName", System.Data.DbType.String, CoApplicantCompanyName);
                    database.AddInParameter(command, "CoApplicantJoiningDate", System.Data.DbType.String, CoApplicantJoiningDate);
                    database.AddInParameter(command, "CoApplicantWorkExperience", System.Data.DbType.String, CoApplicantWorkExperience);
                    database.AddInParameter(command, "CoApplicantGrossSalary", System.Data.DbType.String, CoApplicantGrossSalary);
                    database.AddInParameter(command, "CoApplicantAnnualBonus", System.Data.DbType.String, CoApplicantAnnualBonus);
                    database.AddInParameter(command, "CoApplicantMonthlyIncentives", System.Data.DbType.String, CoApplicantAnnualBonus);
                    database.AddInParameter(command, "CoapplicantYearOfEstablishment", System.Data.DbType.String, CoapplicantYearOfEstablishment);
                    database.AddInParameter(command, "CoapplicantPofitExcludingTax", System.Data.DbType.String, CoapplicantPofitExcludingTax);
                    database.AddInParameter(command, "CoApplicantEMI", System.Data.DbType.String, CoApplicantEMI);
                    database.AddInParameter(command, "CoApplicantDateofBirth", System.Data.DbType.String, CoApplicantDateofBirth);
                    database.AddInParameter(command, "Retiredfrom", System.Data.DbType.String, Retiredfrom);
                    database.AddInParameter(command, "YearofRetirement", System.Data.DbType.String, YearofRetirement);
                    database.AddInParameter(command, "DesignationAtRetirement", System.Data.DbType.String, DesignationAtRetirement);
                    database.AddInParameter(command, "Pension", System.Data.DbType.String, Pension);
                    database.AddInParameter(command, "PensionAmount", System.Data.DbType.String, PensionAmount);
                    database.AddInParameter(command, "NonPensionSourceOfLivelihood", System.Data.DbType.String, NonPensionSourceOfLivelihood);
                    database.AddInParameter(command, "NonPensionIncome", System.Data.DbType.String, NonPensionIncome);
                    database.AddInParameter(command, "Homemaker", System.Data.DbType.String, Homemaker);
                    database.AddInParameter(command, "Name", System.Data.DbType.String, Name);
                    database.AddInParameter(command, "MobileNo", System.Data.DbType.String, MobileNo);
                    database.AddInParameter(command, "EmailID", System.Data.DbType.String, EmailID);
                    database.AddInParameter(command, "CreatedDate", System.Data.DbType.String, CreatedDate);
                    database.AddInParameter(command, "Source", System.Data.DbType.String, Source);

                    database.AddInParameter(command, "PropertyLocation", System.Data.DbType.String, PropertyLocation);
                    database.AddInParameter(command, "UseOfLoan", System.Data.DbType.String, UseOfLoan);
                    database.AddInParameter(command, "CostOfProperty", System.Data.DbType.String, CostOfProperty);
                    database.AddInParameter(command, "PropertyDetails", System.Data.DbType.String, PropertyDetails);
                    database.AddInParameter(command, "BuilderorProjectName", System.Data.DbType.String, BuilderorProjectName);
                    database.AddInParameter(command, "CostofHomeFlat", System.Data.DbType.String, CostofHomeFlat);
                    database.AddInParameter(command, "LandLocation", System.Data.DbType.String, LandLocation);
                    database.AddInParameter(command, "TypeOfLand", System.Data.DbType.String, TypeOfLand);
                    database.AddInParameter(command, "Seller", System.Data.DbType.String, Seller);
                    database.AddInParameter(command, "CostofLand", System.Data.DbType.String, CostofLand);
                    database.AddInParameter(command, "CostofConstruction", System.Data.DbType.String, CostofConstruction);

                    database.AddInParameter(command, "VehicleType", System.Data.DbType.String, VehicleType);
                    database.AddInParameter(command, "TwoWheelerType", System.Data.DbType.String, TwoWheelerType);
                    database.AddInParameter(command, "VehicleMakeAndModel", System.Data.DbType.String, VehicleMakeAndModel);
                    database.AddInParameter(command, "TypeOfCar", System.Data.DbType.String, TypeOfCar);
                    database.AddInParameter(command, "PreferredCarForNewCar", System.Data.DbType.String, PreferredCarForNewCar);
                    database.AddInParameter(command, "PreferredCarForUsedCar", System.Data.DbType.String, PreferredCarForUsedCar);
                    database.AddInParameter(command, "MonthYearOfManufacture", System.Data.DbType.String, MonthYearOfManufacture);

                    database.AddInParameter(command, "WeightofGold", System.Data.DbType.String, WeightofGold);
                    database.AddInParameter(command, "CaratofGold", System.Data.DbType.String, CaratofGold);

                    database.AddInParameter(command, "LocationtoStudy", System.Data.DbType.String, LocationtoStudy);
                    database.AddInParameter(command, "EducationalCourse", System.Data.DbType.String, EducationalCourse);
                    database.AddInParameter(command, "UnderGraduationOption", System.Data.DbType.String, UnderGraduationOption);
                    database.AddInParameter(command, "PercentageUnderGraduation", System.Data.DbType.String, PercentageUnderGraduation);
                    database.AddInParameter(command, "UniversityNamePostGraduation", System.Data.DbType.String, UniversityNamePostGraduation);
                    database.AddInParameter(command, "DegreePostGraduation", System.Data.DbType.String, DegreePostGraduation);
                    database.AddInParameter(command, "PercentagePostGraduation", System.Data.DbType.String, PercentagePostGraduation);

                    database.AddInParameter(command, "ArticleToPurchase", System.Data.DbType.String, ArticleToPurchase);
           
                    database.AddOutParameter(command, "Result", System.Data.DbType.Int32, Result);
                    database.ExecuteNonQuery(command);
                }
                JObject DBReturnResult = new JObject();
                DBReturnResult.Add("Result", (command.Parameters)[command.Parameters.Count - 1].Value.ToString());
                return DBReturnResult;
            }
            catch (Exception ex)
            {
                JObject DBReturnResult = new JObject();
                DBReturnResult.Add("Result", ex.Message);
                return DBReturnResult;
            }

        }


    }
}







